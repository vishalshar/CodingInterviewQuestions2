
/**
 *
 * @author Vishal
 */
class Node {

    int data;
    public Node next;

    Node() {
        data = 0;
        next = null;
    }

    Node(int x) {
        data = x;
        next = null;
    }

    public void setNext(Node next) {
        this.next = next;
    }
}

public class LinkedListPalindrome {

    public static void main(String args[]) {
        Node head = new Node(5);
        Node temp = new Node(10);
        head.next = temp;
        Node temp2 = new Node(15);
        temp.next = temp2;
        Node temp3 = new Node (20);
        temp2.next = temp3;
        Node temp4 = new Node(15);
        temp3.next = temp4;
        Node temp5 = new Node(10);
        temp4.next = temp5;
        Node temp6 = new Node(5);
        //temp5.next = temp6;
        
        System.out.println("Given LinkedList");
        printList(head);
        
        Node center = centerNode(head);
        System.out.println("");
        System.out.println("Center "+center.data);
        
        Node head2 = reverseLinedList(center.next);
        System.out.println("");
        System.out.println("Reversed second half ");
        printList(head2);
        
        System.out.println("");
        System.out.println("Answer "+ checkPalindrom(head, head2));
        
    }
    
    public static Node reverseLinedList(Node head)
    {
        if(head.next == null)
            return head;
        
        Node second = head.next;
        head.next = null;
        
        Node reverse = reverseLinedList(second);
        second.next = head;
        
        return reverse;
    }
    
    public static Node centerNode(Node head)
    {
        if(head == null)
            return head;
        
        Node slow = head;
        Node fast = head.next;     
        
        while(!(fast==null || slow==null || fast.next==null))
        {
                slow = slow.next;
                fast = fast.next.next;
        }
        
        return slow;
    }
    
    public static void printList(Node head)
    {
        if(head == null)
            return;
        while(head!=null)
        {
            System.out.println(head.data+" ");
            head = head.next;
        }
    }

    private static boolean checkPalindrom(Node head, Node head2) {
        
        while(!(head==null || head2==null))
        {
            if(head.data != head2.data)
                return false;
            
            head = head.next;
            head2 = head2.next;
        }
        return true;
    }
}
